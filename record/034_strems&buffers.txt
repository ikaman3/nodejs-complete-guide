Streams & Buffers

데이터에 어떻게 접근하는가
req.url, req.method처럼 req.data가 있을거라 생각하지만 그런건 없다. 대신 들어오는 요청이 데이터 스트림으로 보내지는데
자바스크립트가 일반적으로 알고 있는 구조체이며 Node.js에서 많이 사용한다.

데이터 스트림
Example: Incoming Request
스트림은 지속적인 프로세스이다. 노트가 많은 양의 요청을 한 청크씩(Request Body Part 1, 2, ...) 읽고 어느 시점에 다 읽게 된다.(Fully Parsed) 이때부터 요청 전체를 읽기까지 기다리지 않고도 각각의 청크를 다룰 수 있다. 간단한 요청의 경우 이 과정이 필요하지 않다.
하지만 파일 업로드의 경우 상당히 오래 걸릴 것이다. 이럴 때는 데이터를 스트리밍하면 디스크에 쓸 수 있다. 죽, 데이터가 들어오는 와중에 앱이 실행되는 하드 드라이브나 노드 앱이 실행되는 서버에 쓸 수 있기 때문에 파일 전체가 분석 완료되고 전부 업로드되기까지 가만히 기다릴 필요가 없다.
Node.js는 요청이 얼마나 크고 복잡한지 미리 알 수 없기 때문에 전부 이런 방식으로 처리하는 것이다.
하지만 데이터를 미리 다룰 수 있다. 문제는 코드를 사용해 청크를 마음대로 다룰 수는 없고 대신 들어오는 청크를 체계화하기 위해 버퍼를 이용한다.

